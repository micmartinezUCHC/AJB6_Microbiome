cell_fun = function(j, i, x, y, w, h, col) {
grid.text(round(top.degs.baseMean[i, j],1), x, y,
gp = gpar(fontsize = 3,
col = "black"))})
HM <- hmScaled + hml2FC + hmMean
HM
pdf("Control_vs_Large_heatmapByGroup.pdf")
setwd <- "/Users/mikemartinez/Desktop/New_PREVENT/counts/"
countsDir <- "/Users/mikemartinez/Desktop/New_PREVENT/counts/"
files <- list.files("/Users/mikemartinez/Desktop/New_PREVENT/counts/")
files
files <- list.files("/Users/mikemartinez/Desktop/New_PREVENT/counts/", pattern = "*.counts")
files
files <- list.files("/Users/mikemartinez/Desktop/New_PREVENT/counts/", pattern = "*.counts$")
files
i<-0
while (i<length(files)){
if (i == 0){
print(paste0("Read in file : ",files[i+1]))
fileName=paste0(countsDir,"/",files[i+1])
df1<-read.table(fileName,sep="\t",stringsAsFactors = FALSE,header=F)
colnames(df1)<-c("geneID",strsplit(files[i+1],".counts"))
i<-i+1
}else{
print(paste0("Read in file : ",files[i+1]))
fileName=paste0(countsDir,"/",files[i+1])
df2<-read.table(fileName,sep="\t",stringsAsFactors = FALSE,header=F)
colnames(df2)<-c("geneID",strsplit(files[i+1],".counts"))
df1<-merge(df1,df2,by.x="geneID",by.y="geneID",sort=FALSE)
i<-i+1
}
}
head(df1)
dim(df1)
df1<-df1[(!stringr::str_starts(df1[["geneID"]],"__")),]
dim(df1)
df1<-column_to_rownames(df1,var = "geneID")
head(df1)
df1<-df1[(rowSums(df1)>10),]
write.csv(df1, file = "RB_PREVENT_masterCounts_with_Normals.csv")
raw <- read.csv("../counts/Tumor_and_Normal_counts.csv.csv", header = TRUE, sep = ",")
raw <- read.csv("../counts/Tumor_and_Normal_counts.csv", header = TRUE, sep = ",")
raw$Symbol <- mapIds(org.Rn.eg.db, key = raw$Gene, column = "SYMBOL",
keytype = "ENSEMBL", multiVals = "first")
raw <- read.csv("../counts/Tumor_and_Normal_counts.csv", header = TRUE, sep = ",")
raw$Symbol <- mapIds(org.Rn.eg.db, key = raw$Gene, column = "SYMBOL",
keytype = "ENSEMBL", multiVals = "first")
raw <- raw[!is.na(raw$Symbol),]
raw <- raw[!grepl("^LOC\\d+$", raw$Symbol),]
raw <- raw[!grepl("^RGD\\d+$", raw$Symbol),]
raw$geneIDs <- paste(raw$Gene, raw$Symbol, sep = " - ")
rownames(raw) <- raw$geneIDs
raw$Gene <- NULL
raw$Symbol <- NULL
raw$geneIDs <- NULL
minimumCountpergene <- 10
MinSampleWithminimumgeneCounts <- 5
raw <- raw[rowSums(data.frame(raw>minimumCountpergene)) > MinSampleWithminimumgeneCounts,]
design <- data.frame(
Sample = rep(c("Tumor", "Normal"),
c(29, 22)),
Group = rep(c("Cntl_T", "Npxn_T", "EPA_T", "Combo_T", "Cntl_N", "EPA_N", "Npxn_N", "Combo_N"),
c(9, 5, 7, 8, 6, 5, 6, 5)))
rownames(design) <- colnames(raw)
all(colnames(raw) %in% rownames(design))
all(colnames(raw) == rownames(design))
dds <- DESeqDataSetFromMatrix(countData = raw,
colData = design,
design = ~ Group)
dds$Group <- relevel(dds$Group, ref = "Cntl_T")
dds <- DESeq(dds)
se <- SummarizedExperiment(log2(counts(dds, normalized = TRUE) + 1), colData = colData(dds))
PCA <- plotPCA(DESeqTransform(se), intgroup = "Group") +
geom_text_repel(aes(label = rownames(design)), size = 3, max.overlaps = Inf) +
ggtitle("PREVENT") +
stat_ellipse(geom = "polygon", type = "norm", level = 0.90, alpha = 0.10, aes(fill = group)) +
theme_bw() +
theme(legend.position = "bottom")
PCA
PCA <- plotPCA(DESeqTransform(se), intgroup = "Group") +
geom_text_repel(aes(label = rownames(design)), size = 3, max.overlaps = Inf) +
ggtitle("PREVENT All Samples") +
stat_ellipse(geom = "polygon", type = "norm", level = 0.90, alpha = 0.10, aes(fill = group)) +
theme_bw() +
theme(legend.position = "bottom")
PCA
ggsave("/Users/mikemartinez/Desktop/New_PREVENT/all_PREVENT_samples_PCA_9.12.23.pdf", PCA, width = 12, height = 8)
res <- results(dds)
res.df <- as.data.frame(res)
#Get the normalixed counts
counts <- counts(dds, normalized = TRUE)
res.ordered <- res.df[order(res.df$log2FoldChange, decreasing = TRUE),]
res.ordered <- merge(res.ordered, counts, by = 0, all = TRUE)
res.ordered$Ensembl <- gsub("^(.*?) - .*", "\\1", res.ordered$Row.names)
res.ordered$Symbols <- gsub("^[^-]+-(.*)$", "\\1", res.ordered$Row.names)
write.csv(res.ordered, file = "ControlTumorVsNormal_All_DEGs_orderedByLog2FC_decreasing.csv")
res.top <- res.ordered[res.ordered$padj < 0.05 & abs(res.ordered$log2FoldChange) > 2,]
res.top <- na.omit(res.top)
write.csv(res.top, file = "filteredDEGs_padj005_log2FC2.csv")
res.top <- res.top[order(res.top$log2FoldChange, decreasing = TRUE),]
top.degs <- res.top[order(res.top$log2FoldChange, decreasing = TRUE),]
top.degs$Ensembl <- NULL
top.degs$Symbols <- NULL
total_rows <- nrow(top.degs)
top.degs.keep <- c(1:50, (total_rows - 49):total_rows)
top.degs.subset <- top.degs[top.degs.keep,]
top.degs.log2fc <- as.matrix(top.degs.subset$log2FoldChange)
colnames(top.degs.log2fc) <- "Log2FC"
top.degs.baseMean <- as.matrix(top.degs.subset$baseMean)
colnames(top.degs.baseMean) <- "BaseMean"
top.degs.subset <- top.degs.subset[,c(1,8:ncol(top.degs.subset))]
rownames(top.degs.subset) <- top.degs.subset$Row.names
top.degs.subset$Row.names <- NULL
scaled <- t(apply(top.degs.subset, 1, scale))
colnames(scaled) <- colnames(top.degs.subset)
#Map colors to values
l2FC.colors <- colorRamp2(c(min(top.degs.log2fc),
max(top.degs.log2fc)),
c("white", "red"))
mean.colors <- colorRamp2(c(quantile(top.degs.baseMean)[1],
quantile(top.degs.baseMean)[4]),
c("white", "red"))
labels <- gsub("^[^-]+-(.*)$", "\\1", rownames(top.degs.subset))
top.degs.subset$Symbols <- labels
color_vector <- c("blue", "cyan", "orange", "red", "green", "forestgreen","pink", "firebrick", "gray")
names(color_vector) <- c("Cntl_T", "EPA_T", "Npxn_T", "Combo_T", "Cntl_N", "EPA_N", "Npxn_N", "Combo_N")
color_vector <- c("blue", "cyan", "orange", "red", "green", "forestgreen","pink", "firebrick", "gray")
names(color_vector) <- c("Cntl_T", "EPA_T", "Npxn_T", "Combo_T", "Cntl_N", "EPA_N", "Npxn_N", "Combo_N")
#Annotation column
hmAnno <- HeatmapAnnotation(group = design$Group,
name = "",
show_annotation_name = FALSE,
col = list(group = color_vector))
hmSplit <- rep(1:8, c(9, 5, 7, 8, 6, 5, 6, 5))
hmScaled <- Heatmap(scaled,
column_labels = colnames(scaled),
name = "Z-score",
cluster_rows = FALSE,
cluster_columns = FALSE,
top_annotation = hmAnno,
column_split = hmSplit,
column_title = "Control Tumor vs Normal")
View(top.degs.subset)
color_vector <- c("blue", "cyan", "orange", "red", "green", "forestgreen","pink", "firebrick", "gray")
names(color_vector) <- c("Cntl_T", "EPA_T", "Npxn_T", "Combo_T", "Cntl_N", "EPA_N", "Npxn_N", "Combo_N")
#Annotation column
hmAnno <- HeatmapAnnotation(group = design$Group,
name = "",
show_annotation_name = FALSE,
col = list(group = color_vector))
color_vector <- c("blue", "cyan", "orange", "red", "green", "forestgreen","pink", "firebrick", "gray")
names(color_vector) <- c("Cntl_T", "EPA_T", "Npxn_T", "Combo_T", "Cntl_N", "EPA_N", "Npxn_N", "Combo_N")
#Annotation column
hmAnno <- HeatmapAnnotation(group = design$Group,
name = "",
show_annotation_name = FALSE,
col = list(group = color_vector))
color_vector <- c("blue", "cyan", "orange", "red", "green", "forestgreen","pink", "firebrick", "gray")
names(color_vector) <- c("Cntl_T", "EPA_T", "Npxn_T", "Combo_T", "Cntl_N", "EPA_N", "Npxn_N", "Combo_N")
hmAnno <- HeatmapAnnotation(group = design$Group,
name = "",
show_annotation_name = FALSE,
col = list(group = color_vector))
color_vector <- c("blue", "cyan", "orange", "red", "green", "forestgreen","pink", "firebrick", "gray")
names(color_vector) <- c("Cntl_T", "Npxn_T", "EPA_T", "Combo_T", "Cntl_N", "EPA_N", "Npxn_N", "Combo_N")
#Annotation column
hmAnno <- HeatmapAnnotation(group = design$Group,
name = "",
show_annotation_name = FALSE,
col = list(group = color_vector))
hmScaled <- Heatmap(scaled,
column_labels = colnames(scaled),
name = "Z-score",
cluster_rows = FALSE,
cluster_columns = FALSE,
top_annotation = hmAnno,
column_split = hmSplit,
column_title = "Control Tumor vs Normal")
color_vector <- c("blue", "red")
names(color_vector) <- c("Tumor", "Normal")
#Annotation column
hmAnno <- HeatmapAnnotation(group = design$Sample,
name = "",
show_annotation_name = FALSE,
col = list(group = color_vector))
#Set heatmap splitting pattern
hmSplit <- rep(1:2, c(29, 22))
hmScaled <- Heatmap(scaled,
column_labels = colnames(scaled),
name = "Z-score",
cluster_rows = FALSE,
cluster_columns = FALSE,
top_annotation = hmAnno,
column_split = hmSplit,
column_title = "Control Tumor vs Normal")
#Heatmap for log2FC values
hml2FC <- Heatmap(top.degs.log2fc,
row_labels = labels,
cluster_rows = FALSE,
name = "log2FC",
col = l2FC.colors,
cell_fun = function(j,i, x, y, w, h, col) {
grid.text(round(top.degs.log2fc[i, j],1), x, y,
gp = gpar(fontsize = 3,
col = "black"))})
#Heatmap for average expression
hmMean <- Heatmap(top.degs.baseMean,
row_labels = labels,
row_names_gp = gpar(fontsize = 3),
cluster_rows = FALSE,
name = "Avg Expression",
col = mean.colors,
cell_fun = function(j, i, x, y, w, h, col) {
grid.text(round(top.degs.baseMean[i, j],1), x, y,
gp = gpar(fontsize = 3,
col = "black"))})
HM <- hmScaled + hml2FC + hmMean
HM
HM
pdf("ControlT_vs_Normal_Heatmap.pdf")
hmScaled <- Heatmap(scaled,
column_labels = colnames(scaled),
name = "Z-score",
cluster_rows = FALSE,
cluster_columns = FALSE,
top_annotation = hmAnno,
column_split = hmSplit,
column_title = "Control Tumor vs Normal")
hmScaled
top.degs <- res.top[order(res.top$log2FoldChange, decreasing = TRUE),]
top.degs$Ensembl <- NULL
top.degs$Symbols <- NULL
total_rows <- nrow(top.degs)
top.degs.keep <- c(1:50, (total_rows - 49):total_rows)
top.degs.subset <- top.degs[top.degs.keep,]
#Pull the baseMean column and Log2FC columns as lists
top.degs.log2fc <- as.matrix(top.degs.subset$log2FoldChange)
colnames(top.degs.log2fc) <- "Log2FC"
top.degs.baseMean <- as.matrix(top.degs.subset$baseMean)
colnames(top.degs.baseMean) <- "BaseMean"
#Extract just the first column and the counts columns
top.degs.subset <- top.degs.subset[,c(1,8:ncol(top.degs.subset))]
rownames(top.degs.subset) <- top.degs.subset$Row.names
top.degs.subset$Row.names <- NULL
#Transpose, center, and scale the normalized counts
scaled <- t(apply(top.degs.subset, 1, scale))
colnames(scaled) <- colnames(top.degs.subset)
l2FC.colors <- colorRamp2(c(min(top.degs.log2fc),
max(top.degs.log2fc)),
c("white", "red"))
mean.colors <- colorRamp2(c(quantile(top.degs.baseMean)[1],
quantile(top.degs.baseMean)[4]),
c("white", "red"))
labels <- gsub("^[^-]+-(.*)$", "\\1", rownames(top.degs.subset))
top.degs.subset$Symbols <- labels
# Create a named vector for the colors
color_vector <- c("blue", "red")
names(color_vector) <- c("Tumor", "Normal")
hmAnno <- HeatmapAnnotation(group = design$Sample,
name = "",
show_annotation_name = FALSE,
col = list(group = color_vector))
hmSplit <- rep(1:2, c(29, 22))
hmScaled <- Heatmap(scaled,
column_labels = colnames(scaled),
name = "Z-score",
cluster_rows = FALSE,
cluster_columns = FALSE,
top_annotation = hmAnno,
column_split = hmSplit,
column_title = "Control Tumor vs Normal")
#Heatmap for log2FC values
hmScaled
View(hmScaled)
hml2FC <- Heatmap(top.degs.log2fc,
row_labels = labels,
cluster_rows = FALSE,
name = "log2FC",
col = l2FC.colors,
cell_fun = function(j,i, x, y, w, h, col) {
grid.text(round(top.degs.log2fc[i, j],1), x, y,
gp = gpar(fontsize = 3,
col = "black"))})
hmMean <- Heatmap(top.degs.baseMean,
row_labels = labels,
row_names_gp = gpar(fontsize = 3),
cluster_rows = FALSE,
name = "Avg Expression",
col = mean.colors,
cell_fun = function(j, i, x, y, w, h, col) {
grid.text(round(top.degs.baseMean[i, j],1), x, y,
gp = gpar(fontsize = 3,
col = "black"))})
HM <- hmScaled + hml2FC + hmMean
HM
raw <- read.csv("../counts/Tumor_and_Normal_counts.csv", header = TRUE, sep = ",")
raw$Symbol <- mapIds(org.Rn.eg.db, key = raw$Gene, column = "SYMBOL",
keytype = "ENSEMBL", multiVals = "first")
#Omit any gene with no symbol annotation or unknown genes
raw <- raw[!is.na(raw$Symbol),]
raw <- raw[!grepl("^LOC\\d+$", raw$Symbol),]
raw <- raw[!grepl("^RGD\\d+$", raw$Symbol),]
#Format the rownames to join Ensembl ID and symbol
raw$geneIDs <- paste(raw$Gene, raw$Symbol, sep = " - ")
rownames(raw) <- raw$geneIDs
raw$Gene <- NULL
raw$Symbol <- NULL
raw$geneIDs <- NULL
#Filter
minimumCountpergene <- 10
MinSampleWithminimumgeneCounts <- 5
#Filter out low read counts for Normal vs control, Naproxen vs control, etc...
raw <- raw[rowSums(data.frame(raw>minimumCountpergene)) > MinSampleWithminimumgeneCounts,]
#Create a design table
design <- data.frame(
Sample = rep(c("Tumor", "Normal"),
c(29, 22)),
Group = rep(c("Cntl_T", "Npxn_T", "EPA_T", "Combo_T", "Cntl_N", "EPA_N", "Npxn_N", "Combo_N"),
c(9, 5, 7, 8, 6, 5, 6, 5)))
rownames(design) <- colnames(raw)
all(colnames(raw) %in% rownames(design))
all(colnames(raw) == rownames(design))
dds <- DESeqDataSetFromMatrix(countData = raw,
colData = design,
design = ~ Group)
dds$Group <- relevel(dds$Group, ref = "Cntl_T")
dds <- DESeq(dds)
se <- SummarizedExperiment(log2(counts(dds, normalized = TRUE) + 1), colData = colData(dds))
PCA <- plotPCA(DESeqTransform(se), intgroup = "Sample") +
geom_text_repel(aes(label = rownames(design)), size = 3, max.overlaps = Inf) +
ggtitle("PREVENT All Samples") +
stat_ellipse(geom = "polygon", type = "norm", level = 0.90, alpha = 0.10, aes(fill = group)) +
theme_bw() +
theme(legend.position = "bottom")
PCA
PCA
PCA <- plotPCA(DESeqTransform(se), intgroup = "Group") +
geom_text_repel(aes(label = rownames(design)), size = 3, max.overlaps = Inf) +
ggtitle("PREVENT All Samples") +
stat_ellipse(geom = "polygon", type = "norm", level = 0.90, alpha = 0.10, aes(fill = group)) +
theme_bw() +
theme(legend.position = "bottom")
PCA
PCA
res <- results(dds)
res.df <- as.data.frame(res)
counts <- counts(dds, normalized = TRUE)
res.ordered <- res.df[order(res.df$log2FoldChange, decreasing = TRUE),]
res.ordered <- merge(res.ordered, counts, by = 0, all = TRUE)
res.ordered$Ensembl <- gsub("^(.*?) - .*", "\\1", res.ordered$Row.names)
res.ordered$Symbols <- gsub("^[^-]+-(.*)$", "\\1", res.ordered$Row.names)
res.top <- res.ordered[res.ordered$padj < 0.05 & abs(res.ordered$log2FoldChange) > 2,]
res.top <- na.omit(res.top)
res.top <- res.top[order(res.top$log2FoldChange, decreasing = TRUE),]
top.degs <- res.top[order(res.top$log2FoldChange, decreasing = TRUE),]
top.degs$Ensembl <- NULL
top.degs$Symbols <- NULL
total_rows <- nrow(top.degs)
top.degs.keep <- c(1:50, (total_rows - 49):total_rows)
top.degs.subset <- top.degs[top.degs.keep,]
#Pull the baseMean column and Log2FC columns as lists
top.degs.log2fc <- as.matrix(top.degs.subset$log2FoldChange)
colnames(top.degs.log2fc) <- "Log2FC"
top.degs.baseMean <- as.matrix(top.degs.subset$baseMean)
colnames(top.degs.baseMean) <- "BaseMean"
#Extract just the first column and the counts columns
top.degs.subset <- top.degs.subset[,c(1,8:ncol(top.degs.subset))]
rownames(top.degs.subset) <- top.degs.subset$Row.names
top.degs.subset$Row.names <- NULL
#Transpose, center, and scale the normalized counts
scaled <- t(apply(top.degs.subset, 1, scale))
colnames(scaled) <- colnames(top.degs.subset)
#Map colors to values
l2FC.colors <- colorRamp2(c(min(top.degs.log2fc),
max(top.degs.log2fc)),
c("white", "red"))
mean.colors <- colorRamp2(c(quantile(top.degs.baseMean)[1],
quantile(top.degs.baseMean)[4]),
c("white", "red"))
#Isolate gene symbols for labeling
labels <- gsub("^[^-]+-(.*)$", "\\1", rownames(top.degs.subset))
top.degs.subset$Symbols <- labels
# Create a named vector for the colors
color_vector <- c("blue", "red")
names(color_vector) <- c("Tumor", "Normal")
desing$Sample
design$Sample
hmAnno <- HeatmapAnnotation(group = design$Sample,
name = "",
show_annotation_name = FALSE,
col = list(group = color_vector))
hmAnno
View(top.degs.subset)
top.degs.subset$Symbols <- NULL
color_vector <- c("blue", "red")
names(color_vector) <- c("Tumor", "Normal")
#Annotation column
hmAnno <- HeatmapAnnotation(group = design$Sample,
name = "",
show_annotation_name = FALSE,
col = list(group = color_vector))
hmSplit <- rep(1:2, c(29, 22))
hmScaled <- Heatmap(scaled,
column_labels = colnames(scaled),
name = "Z-score",
cluster_rows = FALSE,
cluster_columns = FALSE,
top_annotation = hmAnno,
column_split = hmSplit,
column_title = "Control Tumor vs Normal")
hmScaled
hml2FC <- Heatmap(top.degs.log2fc,
row_labels = labels,
cluster_rows = FALSE,
name = "log2FC",
col = l2FC.colors,
cell_fun = function(j,i, x, y, w, h, col) {
grid.text(round(top.degs.log2fc[i, j],1), x, y,
gp = gpar(fontsize = 3,
col = "black"))})
#Heatmap for average expression
hmMean <- Heatmap(top.degs.baseMean,
row_labels = labels,
row_names_gp = gpar(fontsize = 3),
cluster_rows = FALSE,
name = "Avg Expression",
col = mean.colors,
cell_fun = function(j, i, x, y, w, h, col) {
grid.text(round(top.degs.baseMean[i, j],1), x, y,
gp = gpar(fontsize = 3,
col = "black"))})
HM <- hmScaled + hml2FC + hmMean
HM
pdf("ControlT_vs_Normal_Heatmap.pdf")
setwd("/Users/mikemartinez/Desktop/New_PREVENT/Tuesday_Sep12_2023/")
raw <- read.csv("../counts/Tumor_and_Normal_counts.csv", header = TRUE, sep = ",")
raw$Symbol <- mapIds(org.Rn.eg.db, key = raw$Gene, column = "SYMBOL",
keytype = "ENSEMBL", multiVals = "first")
#Omit any gene with no symbol annotation or unknown genes
raw <- raw[!is.na(raw$Symbol),]
raw <- raw[!grepl("^LOC\\d+$", raw$Symbol),]
raw <- raw[!grepl("^RGD\\d+$", raw$Symbol),]
raw$geneIDs <- paste(raw$Gene, raw$Symbol, sep = " - ")
rownames(raw) <- raw$geneIDs
raw$Gene <- NULL
raw$Symbol <- NULL
raw$geneIDs <- NULL
#Filter
minimumCountpergene <- 10
MinSampleWithminimumgeneCounts <- 5
raw <- raw[rowSums(data.frame(raw>minimumCountpergene)) > MinSampleWithminimumgeneCounts,]
design <- data.frame(
Sample = rep(c("Tumor", "Normal"),
c(29, 22)),
Group = rep(c("Cntl_T", "Npxn_T", "EPA_T", "Combo_T", "Cntl_N", "EPA_N", "Npxn_N", "Combo_N"),
c(9, 5, 7, 8, 6, 5, 6, 5)))
rownames(design) <- colnames(raw)
all(colnames(raw) %in% rownames(design))
all(colnames(raw) == rownames(design))
dds <- DESeqDataSetFromMatrix(countData = raw,
colData = design,
design = ~ Group)
dds$Group <- relevel(dds$Group, ref = "Cntl_T")
dds <- DESeq(dds)
se <- SummarizedExperiment(log2(counts(dds, normalized = TRUE) + 1), colData = colData(dds))
PCA <- plotPCA(DESeqTransform(se), intgroup = "Group") +
geom_text_repel(aes(label = rownames(design)), size = 3, max.overlaps = Inf) +
ggtitle("PREVENT All Samples") +
stat_ellipse(geom = "polygon", type = "norm", level = 0.90, alpha = 0.10, aes(fill = group)) +
theme_bw() +
theme(legend.position = "bottom")
PCA
PCA
top10Families <- read.csv("top10_families_based_on_meanRelAbund_frequency.csv", header = TRUE, sep = ",")
setwd("/Users/mikemartinez/Desktop/AJB6_KnockOut/Results/Microbiome/")
setwd("/Users/mikemartinez/Desktop/AJB6_KnockOut/Results/Microbiome/Family_Analysis/")
top10Families <- read.csv("top10_families_based_on_meanRelAbund_frequency.csv", header = TRUE, sep = ",")
top10Families <- top10Families %>%
mutate(taxa = factor(taxa, levels = Family_order))
Family_order <- c("Bacteroidaceae",
"Deferribacteraceae",
"Acholeplasmataceae",
"Aurantimonadaceae",
"Desulfomicrobiaceae",
"Clostridiales_Family_XVII._Incertae_Sedis",
"Nocardioidaceae",
"Polyangiaceae",
"Ectothiorhodospiraceae",
"Desulfuromonadales_unclassified")
Age_order <- c("8 Weeks", "20 Weeks")
genotype_order <- c("WT", "KO")
top10Families <- top10Families %>%
mutate(taxa = factor(taxa, levels = Family_order))
top10Families <- top10Families %>%
mutate(AGE = factor(AGE, levels = Age_order))
top10Families <- top10Families %>%
mutate(Genotype = factor(Genotype, levels = genotype_order))
top10Family_barplot <- ggplot(top10Families, (aes(x = Sample_ID, y = count))) +
geom_bar(aes(fill = taxa), stat = "identity", position = "fill", width = 1) +
scale_fill_brewer(palette = "Paired") +
theme(axis.text.x = element_text(angle = 90, size = 4.5),
strip.text = element_text(face = "bold")) +
facet_nested_wrap(~Strain + AGE + Genotype, nrow = 1, scale = "free_x",
strip.position = "top") +
scale_y_continuous(name = "Relative Abundance",
labels = scales::percent) +
theme(strip.background = element_rect(color = "black", fill = "lightgray"),
panel.spacing = unit(0.2, "lines")) +
geom_rect(aes(xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf), fill = NA, color ="black") +
labs(title = "Family Level Relative Abundances")
top10Family_barplot
top10Family_barplot
